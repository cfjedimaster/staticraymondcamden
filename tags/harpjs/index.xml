<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Harpjs on Raymond Camden</title>
    <link>http://www.raymondcamden.com/tags/harpjs/</link>
    <description>Recent content in Harpjs on Raymond Camden</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Sep 2015 20:22:23 +0600</lastBuildDate>
    <atom:link href="http://www.raymondcamden.com/tags/harpjs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Working with Directories and HarpJS</title>
      <link>http://www.raymondcamden.com/2015/09/11/working-with-directories-and-harpjs</link>
      <pubDate>Fri, 11 Sep 2015 20:22:23 +0600</pubDate>
      
      <guid>http://www.raymondcamden.com/2015/09/11/working-with-directories-and-harpjs</guid>
      <description>&lt;p&gt;First off - a quick apology. The blogging here has been &lt;i&gt;extremely&lt;/i&gt; slow over the past few weeks. Two weeks ago I was in Australia and New Zealand. This week I&amp;rsquo;ve been in Malaysia, Singapore, and Manila. I&amp;rsquo;m writing this post in Hong Kong as I wait to board my 14 hour flight back to Texas. (Yes, I&amp;rsquo;m looking forward to Texas, imagine that.) I don&amp;rsquo;t normally travel this much so I&amp;rsquo;ve been pretty much exhausted for the past three weeks. It has been an incredible experience, and I got to really work on some presentations too, but I&amp;rsquo;m definitely ready to go home and stay home for a while.&lt;/p&gt;

&lt;p&gt;Ok, so with that out of the way, let&amp;rsquo;s get to the issue. A HarpJS user asked (&lt;a href=&#34;https://github.com/sintaxi/harp/issues/345&#34;&gt;List files in directory&lt;/a&gt;) about how to work with directories in their static site. Essentially, given that you have subdirectories, how can you access them and do - well - something with them?&lt;/p&gt;

&lt;p&gt;Working with files is easy. You get access to a variable, _contents, that includes all of the files in a directory. (You can find the documentation for that here: &lt;a href=&#34;http://harpjs.com/docs/development/contents&#34;&gt;http://harpjs.com/docs/development/contents&lt;/a&gt;.) But what about subdirectories?&lt;/p&gt;

&lt;p&gt;In order to create a simple testing environment, I set up the following folder structure in a Harp project:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.raymondcamden.com/wp-content/uploads/2015/09/shot1.png&#34; alt=&#34;shot1&#34; width=&#34;470&#34; height=&#34;620&#34; class=&#34;aligncenter size-full wp-image-6752 imgborder&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I want to point out a few things. Note that there is a root level _harp.json file for data. Then notice the articles subdirectory has one as well. Beneath that are three &amp;ldquo;category&amp;rdquo; directories each with some random files in it. Ok, so given that, let&amp;rsquo;s look at the data. Your templates have access to a variable, public, that represents pretty much all of the data in the current Harp application. There is a Harp recipe (&lt;a href=&#34;http://harpjs.com/recipes/print-debugging&#34;&gt;How to print out all available data for debugging&lt;/a&gt;) that details how to quickly print out variables to the page and console:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markup&#34;&gt;h1 Welcome to Harp.
h3 This is yours to own. Enjoy.

pre #{ JSON.stringify(public, null, &#39;\t&#39;) }&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is how it looks for my sample structure above:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.raymondcamden.com/wp-content/uploads/2015/09/shot2.png&#34; alt=&#34;shot2&#34; width=&#34;700&#34; height=&#34;949&#34; class=&#34;aligncenter size-full wp-image-6753 imgborder&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s pick this apart. At the top level is a _contents structure. This contains the files, and only the files, for the root level folder. Then you have _data. This represents - well - data. And then you have one key per subdirectory. You can see the same pattern represented under &lt;code&gt;articles&lt;/code&gt; as well.&lt;/p&gt;

&lt;p&gt;Therefore, to get access to subdirectories, you work with the keys of the object &lt;i&gt;minus&lt;/i&gt; the _contents and _data values. To get the subdirectories of some subdirectory /foo, you would use public.foo.&lt;/p&gt;

&lt;p&gt;In theory, you could write up a simple utility function that would return directories for you, or perhaps even files and subdirectories given a particular root node. Anyway, I hope this is useful!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>